package draw;


import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.SecondaryLoop;
import java.awt.Shape;
import java.awt.event.MouseEvent;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import javax.swing.JPanel;
import javax.swing.event.MouseInputAdapter;

import gui.PowerPaintGUI;

public class DrawingPanel extends JPanel { 
    /**
     * 
     */
    private static final long serialVersionUID = -5980366470331898625L;
    private Point myFirstPoint;
    private Point myLastPoint;
    private Color myPrimaryColor;
    private Color mySecondaryColor;
    private Color myCurrentColor;
    private int myWidth;
    
    public DrawingPanel() {
        super();
        setSize(500, 300);
        setBackground(Color.WHITE);
        setUpMouseListners();
        myFirstPoint = new Point(-1000, -1000);
        myLastPoint = new Point(-1000, -1000);
        myPrimaryColor = new Color(51, 0, 111);
        mySecondaryColor = new Color(232, 211, 162);
        myCurrentColor = new Color(51, 0, 111);
        
    }
    @Override
    public void paintComponent(final Graphics theGraphics) { 
        super.paintComponent(theGraphics);
        final Graphics2D g2d = (Graphics2D) theGraphics;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, 
                             RenderingHints.VALUE_ANTIALIAS_ON);
//        final Shape line = new Line2D.Double(myFirstPoint, myLastPoint);
//        g2d.setPaint(myCurrentColor);
//        g2d.setStroke(new BasicStroke(myWidth));
//        g2d.draw(line);
        
        final Double width = myLastPoint.getX() - myFirstPoint.getX();
        final Double height = myLastPoint.getY() - myFirstPoint.getY();
        final Shape line = new Rectangle.Double(myFirstPoint.getX(), myFirstPoint.getY(), width, height);
        g2d.setPaint(myCurrentColor);
        g2d.setStroke(new BasicStroke(myWidth));
        //g2d.rotate(Math.toRadians(45), myFirstPoint.getX(), myFirstPoint.getY());
        g2d.draw(line);

    }
    //connects the mouse adapter to the drawing panel when create a new drawing panel object.
    private void setUpMouseListners() {
        final MouseInputAdapter connect = new MyMouseInputAdapter();
        addMouseListener(connect);
        addMouseMotionListener(connect);
    }
    //This will get the Primary color from the PowerPaintGUI.
    public void getPrimaryColor(Color theColor) {
        myPrimaryColor = theColor;
    }
    //This will get the Secondary color from the PowerPaintGUI.
    public void getSecondaryColor(Color theColor) {
        mySecondaryColor = theColor;
    }
    public void getSliderWidth(int theWidth) {
        myWidth = theWidth;
    }
    //create a inner class here this will take care of all the mouse listener stuff.
    public class MyMouseInputAdapter extends MouseInputAdapter {
        
        //these methods are found in MouseListener
        @Override
        public void mousePressed(final MouseEvent theEvent) {
          
            if (theEvent.getButton() == MouseEvent.BUTTON1) {
                myCurrentColor = myPrimaryColor;
            } else {
                myCurrentColor = mySecondaryColor;
                                
                
            }
            
            myFirstPoint = theEvent.getPoint(); 
        }
        
        @Override
        public void mouseReleased(final MouseEvent theEvent) {
            myLastPoint = theEvent.getPoint();
            repaint();
        }
        
        @Override
        public void mouseDragged(final MouseEvent theEvent) {
            myLastPoint = theEvent.getPoint();
            repaint();
        }
        
        @Override
        public void mouseEntered(final MouseEvent theEvent) {
            setCursor(new Cursor(Cursor.CROSSHAIR_CURSOR));
        }
    }
}